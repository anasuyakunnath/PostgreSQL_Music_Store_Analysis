Query set used for analysis

--who is the senior most employee based on job title?

select*from employee
order by levels desc
limit 1;

--Which countries have the most invoices?
select count(*) as c,billing_country from invoice
group by billing_country order by c desc limit 5;

-- Top 3 values of total invoice
select total from invoice
 order by total desc limit 3;

--city which has best customers
select sum(total) as invoice_total, billing_city from invoice
group by billing_city
order by invoice_total desc limit 1;

--Best customer on the basis of money

select customer.customer_id, customer.first_name, customer.last_name, sum(invoice.total) as total from customer
join invoice 
on customer.customer_id = invoice.customer_id
group by customer.customer_id
order by total desc limit 1;

--Return email, first name and last name listening to genre rock where email is listed alphabetically.

select distinct email, first_name, last_name from customer
join invoice on invoice.customer_id = customer.customer_id
join invoice_line on invoice.invoice_id=invoice_line.invoice_id
	where track_id in (
select track_id from track
join genre on track.genre_id = genre.genre_id
where genre.name like 'Rock')
order by email asc;


-- Top 10 artist who have written most rock music
select artist.artist_id, artist.name, count(artist.artist_id) as number_of_songs from track
join album on album.album_id = track.album_id
join artist on artist.artist_id = album.artist_id
join genre on genre.genre_id = track.genre_id
where genre.name like 'Rock'
group by artist.artist_id
order by number_of_songs desc
limit 10;

--List songs that are longer than the average length of all songs on basis of mili seconds
select name, milliseconds from track
where milliseconds > (
	select avg(milliseconds)from track
	)
order by milliseconds desc;

--amount spend by each customer on artists
with best_selling_artist as(
select artist.artist_id as artist_id, artist.name as artist_name,
sum(invoice_line.unit_price*invoice_line.quantity) as total_sales
from invoice_line
join track on track.track_id=invoice_line.track_id
join album on album.album_id = track.album_id
join artist on artist.artist_id = album.artist_id
group by 1
order by 3 desc
limit 1)
select customer.customer_id, customer.first_name, customer.last_name, best_selling_artist.artist_name,
sum(invoice_line.unit_price*invoice_line.quantity)as amount_spent
from invoice 
join customer on customer.customer_id = invoice.customer_id
join invoice_line on invoice_line.invoice_id = invoice.invoice_id
join track on track.track_id = invoice_line.track_id
join album on album.album_id = track.album_id
join best_selling_artist on best_selling_artist.artist_id = album.artist_id
group by 1,2,3,4
order by 5 desc;

--Most popular genre for each country on the basis of highest amount of purchase

with popular_genre as 
	(
	select count(invoice_line.quantity) as purchases, customer.country, genre.name, genre.genre_id, 
	row_number() over(partition by customer.country order by count(invoice_line.quantity) desc) as RowNo
	FROM invoice_line 
	join invoice on invoice.invoice_id = invoice_line.invoice_id
	join customer on customer.customer_id=invoice.customer_id
	join track on track.track_id =invoice_line.track_id
	join genre on genre.genre_id = track.genre_id
	group by 2,3,4
	order by 2 asc, 1 desc
)
select*from popular_genre where RowNo <=1;

-- the customer that have spent most on music for each country

with customer_and_country as (
	select customer.customer_id, customer.first_name,customer.last_name,invoice.billing_country,sum(invoice.total) as total_spending,
	Row_Number() over(partition by invoice.billing_country order by sum(invoice.total) desc) as RowNo
	from invoice
	join customer on customer.customer_id = invoice.customer_id
	group by 1,2,3,4
	order by 4 asc, 5 desc
)
select * from customer_and_country where RowNo <= 1;
